@model TrackMyDay.Models.JobModel
@using TrackMyDay.Models



@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.UserId)
@Html.HiddenFor(model => model.ApplyDate)
@Html.HiddenFor(model => model.Date)
<table>
    <tr>
        <td>
            <div class="form-group">
                @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                </div>
            </div>
        </td>

        <td>
            <div class="form-group">
                @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                </div>
            </div>
        </td>

        <td>
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
        </td>
    </tr>

    <tr>
        <td>
            <div class="form-group">
                @Html.LabelFor(model => model.Type, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @if (Model.Type == "Full Time")
                    {
                        <p> Full Time :   @Html.RadioButtonFor(model => model.Type, "Full Time", new { @checked = "checked" })</p>
                        <p> Internship : @Html.RadioButtonFor(model => model.Type, "Internship")</p>

                    }
                    @if (Model.Type == "Internship")
                    {
                        <p> Full Time :   @Html.RadioButtonFor(model => model.Type, "Full Time")</p>
                        <p> Internship : @Html.RadioButtonFor(model => model.Type, "Internship", new { @checked = "checked" })</p>

                    }
                </div>
            </div>
        </td>

        <td>
            <div class="form-group">
                @Html.LabelFor(model => model.ApplyThrough, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.ApplyThrough == "Mail")
    {
                <p> Mail :   @Html.RadioButtonFor(model => model.ApplyThrough, "Mail", new { @checked = "checked" })</p>
                <p> Web : @Html.RadioButtonFor(model => model.ApplyThrough, "Web")</p>
                <p> Phone : @Html.RadioButtonFor(model => model.ApplyThrough, "Phone")</p>
                <p> Personally : @Html.RadioButtonFor(model => model.ApplyThrough, "Personally")</p>
                <p> Facebook : @Html.RadioButtonFor(model => model.ApplyThrough, "Facebook")</p>
                <p> LinkedIn : @Html.RadioButtonFor(model => model.ApplyThrough, "LinkedIn")</p>

}
                    @if (Model.ApplyThrough == "Web")
    {
                <p> Mail : @Html.RadioButtonFor(model => model.ApplyThrough, "Mail")</p>
                <p> Web : @Html.RadioButtonFor(model => model.ApplyThrough, "Web", new { @checked = "checked" })</p>
                <p> Phone : @Html.RadioButtonFor(model => model.ApplyThrough, "Phone")</p>
                <p> Personally : @Html.RadioButtonFor(model => model.ApplyThrough, "Personally")</p>
                <p> Facebook : @Html.RadioButtonFor(model => model.ApplyThrough, "Facebook")</p>
                <p> LinkedIn : @Html.RadioButtonFor(model => model.ApplyThrough, "LinkedIn")</p>
}

                    @if (Model.ApplyThrough == "Phone")
    {
                <p> Mail : @Html.RadioButtonFor(model => model.ApplyThrough, "Mail")</p>
                <p> Web : @Html.RadioButtonFor(model => model.ApplyThrough, "Web")</p>
                <p> Phone : @Html.RadioButtonFor(model => model.ApplyThrough, "Phone", new { @checked = "checked" })</p>
                <p> Personally : @Html.RadioButtonFor(model => model.ApplyThrough, "Personally")</p>
                <p> Facebook : @Html.RadioButtonFor(model => model.ApplyThrough, "Facebook")</p>
                <p> LinkedIn : @Html.RadioButtonFor(model => model.ApplyThrough, "LinkedIn")</p>
}

                    @if (Model.ApplyThrough == "Personally")
    {
                <p> Mail : @Html.RadioButtonFor(model => model.ApplyThrough, "Mail")</p>
                <p> Web : @Html.RadioButtonFor(model => model.ApplyThrough, "Web")</p>
                <p> Phone : @Html.RadioButtonFor(model => model.ApplyThrough, "Phone")</p>
                <p> Personally : @Html.RadioButtonFor(model => model.ApplyThrough, "Personally", new { @checked = "checked" })</p>
                <p> Facebook : @Html.RadioButtonFor(model => model.ApplyThrough, "Facebook")</p>
                <p> LinkedIn : @Html.RadioButtonFor(model => model.ApplyThrough, "LinkedIn")</p>
}


                    @if (Model.ApplyThrough == "Facebook")
    {
                <p> Mail : @Html.RadioButtonFor(model => model.ApplyThrough, "Mail")</p>
                <p> Web : @Html.RadioButtonFor(model => model.ApplyThrough, "Web")</p>
                <p> Phone : @Html.RadioButtonFor(model => model.ApplyThrough, "Phone")</p>
                <p> Personally : @Html.RadioButtonFor(model => model.ApplyThrough, "Personally")</p>
                <p> Facebook : @Html.RadioButtonFor(model => model.ApplyThrough, "Facebook", new { @checked = "checked" })</p>
                <p> LinkedIn : @Html.RadioButtonFor(model => model.ApplyThrough, "LinkedIn")</p>
}

                    @if (Model.ApplyThrough == "LinkedIn")
    {
                <p> Mail : @Html.RadioButtonFor(model => model.ApplyThrough, "Mail")</p>
                <p> Web : @Html.RadioButtonFor(model => model.ApplyThrough, "Web")</p>
                <p> Phone : @Html.RadioButtonFor(model => model.ApplyThrough, "Phone")</p>
                <p> Personally : @Html.RadioButtonFor(model => model.ApplyThrough, "Personally")</p>
                <p> Facebook : @Html.RadioButtonFor(model => model.ApplyThrough, "Facebook")</p>
                <p> LinkedIn : @Html.RadioButtonFor(model => model.ApplyThrough, "LinkedIn", new { @checked = "checked" })</p>
}




                </div>
            </div>

        </td>



        <td>
            <div class="form-group">

                @Html.LabelFor(model => model.Announcement, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @if (Model.Announcement == "Announced")
                    {
                        <p> Announced :   @Html.RadioButtonFor(model => model.Announcement, "Announced", new { @checked = "checked" })</p>
                        <p> Unsolited : @Html.RadioButtonFor(model => model.Announcement, "Unsolited")</p>

                    }
                    @if (Model.Announcement == "Unsolited")
                    {
                        <p> Announced : @Html.RadioButtonFor(model => model.Announcement, "Announced")</p>
                        <p> Unsolited : @Html.RadioButtonFor(model => model.Announcement, "Unsolited", new { @checked = "checked" })</p>

                    }
                </div>
            </div>

        </td>
    </tr>

    <tr>
        <td>
            <div class="form-group">
                @Html.LabelFor(model => model.ContacInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContacInfo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContacInfo, "", new { @class = "text-danger" })
                </div>
            </div>
        </td>

        <td>
            <div class="form-group">
                @Html.LabelFor(model => model.Refferance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Refferance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Refferance, "", new { @class = "text-danger" })
                </div>
            </div>
        </td>


        <td>
            <div class="form-group">
                @Html.LabelFor(model => model.Weblink, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Weblink, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Weblink, "", new { @class = "text-danger" })
                </div>
            </div>

        </td>
    </tr>

    <tr>
        <td class=" col-sm-12 ">

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.Status == "Not Reply Yet")
    {
                    <p> Not Reply Yet :   @Html.RadioButtonFor(model => model.Status, "Not Reply Yet", new { @checked = "checked" })</p>
                    <p> Refused : @Html.RadioButtonFor(model => model.Status, "Refused")</p>
                    <p> Interview : @Html.RadioButtonFor(model => model.Status, "Interview")</p>

}
                    @if (Model.Status == "Refused")
    {
                <p> Not Reply Yet :   @Html.RadioButtonFor(model => model.Status, "Not Reply Yet")</p>
                <p> Refused : @Html.RadioButtonFor(model => model.Status, "Refused", new { @checked = "checked" })</p>
                <p> Interview : @Html.RadioButtonFor(model => model.Status, "Interview")</p>
}

                    @if (Model.Status == "Interview")
    {
                <p> Not Reply Yet :   @Html.RadioButtonFor(model => model.Status, "Not Reply Yet")</p>
                <p> Refused : @Html.RadioButtonFor(model => model.Status, "Refused")</p>
                <p> Interview : @Html.RadioButtonFor(model => model.Status, "Interview", new { @checked = "checked" })</p>
}
                </div>
            </div>

        </td>


    </tr>
</table>


